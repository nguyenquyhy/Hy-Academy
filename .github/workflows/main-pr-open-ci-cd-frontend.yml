name: Deploy a new site for each pull request

on:
  pull_request:
    branches: [ main ]
env:
  PRNUMNER: 'hyacademypr${{github.event.pull_request.number}}'  
  
jobs:    
  Azure-Storage-Account:
     runs-on: ubuntu-latest
     environment: Pull Requests
     permissions:
      id-token: write
      contents: read
      pull-requests: write
     steps:
          - name: Azure Login
            uses: Azure/login@v1.4.2
            with: 
                client-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_CLIENT_ID }}
                tenant-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_TENANT_ID }}
                subscription-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_SUBSCRIPTION_ID }}
          
          - name: Check Storage Account Exist
            id: checkAccountExist
            uses: azure/CLI@1.0.4
            with:
              inlineScript: |
                  echo "::set-output name=isNew::`az storage account check-name --name ${PRNUMNER} --query nameAvailable`"

          - name: Create Storage Account
            if: ${{ steps.checkAccountExist.outputs.isNew == 'true'}}
            uses: azure/CLI@1.0.4
            with:
              inlineScript: |
                  az storage account create -n ${PRNUMNER} -g '${{ secrets.RESOURCE_GROUP_NAME }}' -l SoutheastAsia --sku Standard_LRS --kind StorageV2
                  
          - name: Enable Static Site
            if: ${{ steps.checkAccountExist.outputs.isNew == 'true'}}
            uses: azure/CLI@1.0.4
            with:
              inlineScript: |
                  az storage blob service-properties update --account-name ${PRNUMNER} --static-website --404-document index.html --index-document index.html
          
          - name: Get static site URL
            if: ${{ steps.checkAccountExist.outputs.isNew == 'true'}}
            id: geturl
            uses: azure/CLI@1.0.4
            with:
              inlineScript: |
                echo "::set-output name=url::`az storage account show --name ${PRNUMNER} --query 'primaryEndpoints.web'`"          

          - name: Add URL to PR comment
            if: ${{ steps.checkAccountExist.outputs.isNew == 'true'}}
            uses: actions/github-script@v5
            with:
                script: |
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: ${{ steps.geturl.outputs.url }}
                  })              
          
          - name: Azure logout
            run: |
                  az logout
            if: always()
            
  Build-Upload-Package:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Install NPM packages
        working-directory: ./React
        run: npm ci
      
      - name: Run Build
        working-directory: ./React
        run: npm run build
          
      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: package-deployment
          path: ./React/build
          
  Deployment:
    runs-on: ubuntu-latest
    needs: [Azure-Storage-Account, Build-Upload-Package]
    permissions:
      id-token: write
      contents: read
    
    steps:      
      - uses: actions/download-artifact@v2
        with:
          name: package-deployment
          path: ./build
          
      - name: Azure Login
        uses: Azure/login@v1.4.0
        with: 
          client-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_CLIENT_ID }}
          tenant-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_TENANT_ID }}
          subscription-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_SUBSCRIPTION_ID }}
          
      - name: Upload to blob storage
        uses: azure/CLI@1.0.4
        with:
          inlineScript: |
            az storage blob upload-batch --subscription '${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_SUBSCRIPTION_ID }}' --account-name ${PRNUMNER} --auth-mode key -s './build' -d '$web'
            
      - name: Azure logout
        run: |
            az logout
        if: always()
