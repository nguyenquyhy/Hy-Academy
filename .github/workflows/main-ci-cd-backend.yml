name: CI-CD Backend

on:
  push:
    branches: [ main ]
    paths: 
      - '.github/workflows/main-ci-cd-backend.yml'
      - '.azure/backend.bicep'
      - 'Api/**'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-upload-docker-file:
    environment: Production
    runs-on: ubuntu-latest
    permissions: 
      packages: write
      contents: read
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
      
    - name: Log in to Docker Hub
      uses: docker/login-action@v1.12.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        
    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: ${{ secrets.DOCKER_TAG }}
        build-args: |
          FRONTEND_URL=${{ secrets.FRONTEND_URL }}
          AZUREAD_DOMAIN=${{ secrets.AZUREAD_DOMAIN }}
          AZUREAD_INSTANCE=${{ secrets.AZUREAD_INSTANCE }}
          AZUREAD_TENANTID=${{ secrets.AZUREAD_TENANTID }}
          AZUREAD_CLIENTID=${{ secrets.AZUREAD_CLIENTID }}
          AZUREAD_SIGNUPSIGNIN_POLICYID=${{ secrets.AZUREAD_SIGNUPSIGNIN_POLICYID }}

  deploy-function-app:
    environment: Production
    runs-on: ubuntu-latest
    permissions: 
      id-token: write # for OIDC authentication to Azure
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      
    - name: Azure login
      uses: azure/login@v1.4.2
      with:
        client-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_CLIENT_ID }}
        tenant-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_TENANT_ID }}
        subscription-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_SUBSCRIPTION_ID }}

    - name: Get existing package path
      id: check_existing_package
      uses: azure/CLI@v1.0.6
      with:
        inlineScript: |
          echo "::set-output name=currentPackage::`az webapp config appsettings list --name ${{ secrets.FUNCTION_B2C_CONNECTOR_NAME }} --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} --query \"[?name == 'WEBSITE_RUN_FROM_PACKAGE'].value\" --output tsv`"

    - name: Build function app
      working-directory: ./Api/HyAcademy.Functions.AADConnector
      run: |
        dotnet build --configuration Release --output ./output

    - name: Create function app
      uses: Azure/arm-deploy@v1.0.8
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
        template: ./.azure/function.bicep
        # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
        deploymentMode: Incremental
        parameters: functionAppName="${{ secrets.FUNCTION_B2C_CONNECTOR_NAME }}" storageAccountName="${{ secrets.STORAGE_B2C_CONNECTOR_NAME }}" connectionString="${{ secrets.DATABASE_CONNECTION_STRING }}" mySqlVersion="${{ secrets.DATABASE_VERSION }}" currentPackage="${{ steps.check_existing_package.outputs.currentPackage }}"

    - name: Publish function app
      uses: Azure/functions-action@v1.4.6
      with:
        app-name: ${{ secrets.FUNCTION_B2C_CONNECTOR_NAME }}
        package: './Api/HyAcademy.Functions.AADConnector/output'

    - name: Azure logout
      run: |
            az logout
      if: always()
                
  deploy-container-app:
    environment: Production
    runs-on: ubuntu-latest
    needs : [ build-upload-docker-file ]
    permissions: 
      id-token: write # for OIDC authentication to Azure
      contents: read
    steps:
    - name: Check out repository
      uses: actions/checkout@v2
      
    - name: Azure login
      uses: azure/login@v1.4.2
      with:
        client-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_CLIENT_ID }}
        tenant-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_TENANT_ID }}
        subscription-id: ${{ secrets.DEPLOYMENT_SERVICE_PRINCIPAL_SUBSCRIPTION_ID }}

    - name: Deploy container app
      uses: Azure/arm-deploy@v1.0.8
      with:
        resourceGroupName: ${{ secrets.RESOURCE_GROUP_NAME }}
        template: ./.azure/backend.bicep
        # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
        deploymentMode: Incremental
        # Specifies the name of the resource group deployment to create.
        #deploymentName: # optional
        # Supply deployment parameter values.
        parameters: environmentName="${{ secrets.CONTAINER_APP_NAME }}" logAnalyticsSKU="${{ secrets.LOG_ANALYTICS_SKU }}" appName="${{ secrets.CONTAINER_APP_NAME }}" dockerImage="docker.io/${{ secrets.DOCKER_TAG }}" databaseConnectionString="${{ secrets.DATABASE_CONNECTION_STRING }}" customDomain="${{ secrets.API_DOMAIN }}"
        # Specify whether to fail the action if some data is written to stderr stream of az cli. Valid values are: true, false
        #failOnStdErr: # optional, default is true
        # Specify any additional arguments for the deployment.
        #additionalArguments: # optional

    - name: Azure logout
      run: |
            az logout
      if: always()

